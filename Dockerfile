# Copyright 2021 ThoughtWorks, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###############################################################################################
# This file is autogenerated by the repository at https://github.com/gocd/gocd.
# Please file any issues or PRs at https://github.com/gocd/gocd
###############################################################################################

FROM alpine:latest as gocd-agent-unzip

ARG UID=1000

RUN \
  apk --no-cache upgrade && \
  apk add --no-cache curl && \
  curl --fail --location --silent --show-error "https://download.gocd.org/binaries/21.1.0-12439/generic/go-agent-21.1.0-12439.zip" > /tmp/go-agent-21.1.0-12439.zip

RUN unzip /tmp/go-agent-21.1.0-12439.zip -d /
RUN mv /go-agent-21.1.0 /go-agent && chown -R ${UID}:0 /go-agent && chmod -R g=u /go-agent

FROM archlinux:base-devel

LABEL gocd.version="21.1.0" \
  description="GoCD agent based on Arch Linux" \
  maintainer="Tecladozurdo" \
  url="https://tecladozurdo.com"

ADD https://github.com/krallin/tini/releases/download/v0.18.0/tini-static-amd64 /usr/local/sbin/tini

# force encoding
ENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8
ENV GO_JAVA_HOME="/gocd-jre"

ARG UID=1000
ARG GID=1000

# Local time EC
RUN ln -sf /usr/share/zoneinfo/America/Guayaquil /etc/localtime

RUN \
# add mode and permissions for files we added above
  chmod 0755 /usr/local/sbin/tini && \
  chown root:root /usr/local/sbin/tini && \
# add our user and group first to make sure their IDs get assigned consistently,
# regardless of whatever dependencies get added
# add user to root group for gocd to work on openshift
  useradd -u ${UID} -g root -d /home/go -m go
   #yes | pacman -S git subversion mercurial openssh bash unzip curl locales procps sysvinit-utils coreutils && \
  #pacman -Sc git subversion mercurial openssh bash unzip curl locale procps sysvinit coreutils
  #&& \
RUN pacman --noconfirm -Sy git openssh unzip python2
RUN pacman --noconfirm -Scc
RUN \
 echo 'en_US.UTF-8 UTF-8' > /etc/locale.gen && /usr/sbin/locale-gen && \
 curl --fail --location --silent --show-error 'https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.1%2B9/OpenJDK15U-jre_x64_linux_hotspot_15.0.1_9.tar.gz' --output /tmp/jre.tar.gz && \
 mkdir -p /gocd-jre && \
 tar -xf /tmp/jre.tar.gz -C /gocd-jre --strip 1 && \
 rm -rf /tmp/jre.tar.gz && \
 mkdir -p /go-agent /docker-entrypoint.d /go /godata

ADD docker-entrypoint.sh /

COPY --from=gocd-agent-unzip /go-agent /go-agent
# ensure that logs are printed to console output
COPY --chown=go:root agent-bootstrapper-logback-include.xml agent-launcher-logback-include.xml agent-logback-include.xml /go-agent/config/

RUN chown -R go:root /docker-entrypoint.d /go /godata /docker-entrypoint.sh \
    && chmod -R g=u /docker-entrypoint.d /go /godata /docker-entrypoint.sh

# maven / gradle node
RUN pacman --noconfirm -Sy zip maven gradle nodejs npm
RUN pacman --noconfirm -Scc
# angular
RUN npm install -g --silent @angular/cli

ENTRYPOINT ["/docker-entrypoint.sh"]

USER go
